class searchBar implements Chart{
  TextBox info;
  searchBar(){
  
    info = new TextBox( "Enter name of satellite. \nIf the user does not know the name press enter and leave space blank.",  300, 200, 600, 200,  215,0300 << 030, color(255, 040), color(0, 00), color(0, 0));
  }
  void draw (){
    info.checkSelected(screenList);
    info.display();
    info.draw();
   
  }
  
  void draw(char s){
  
    info.SearchBarChar(s);
  
  }
  
  
  
  
  class search{
    search(){
    }
    public ArrayList<AbstractCountry>Name(String name){
      ArrayList<AbstractCountry> Value = new ArrayList<>();
      for(AbstractCountry i : List){
        if(name != ""){
          if(name.equals(i.name)){
            // println(i);
            Value.add(i);     
          }
        } else return null;
      }
      return Value;
    }
      
    public ArrayList<AbstractCountry> Country(String Country){
      ArrayList<AbstractCountry> Value = new ArrayList<>();
      if(Country != ""){
        for(int index = 0; index < countryNameArray.length ; index++){
          if(Country.equals(countryNameArray[index])){
            result = countryNameArray[index];
            Country = Country.toLowerCase();
            Country = Country + "List";
          }
        }
        if(Country.equals("chinaList")){
          Value = chinaList;
          println("chosen");
        } else if(Country.equals("usaList")){
          Value= usaList;
        } else if(Country.equals("euList")){
          Value = euList;
        } else if(Country.equals("otherList")){
          Value = otherList;
        }
        else if(Country.equals("russiaList")){
          Value = russiaList;
        }
      } else {
        Value = List;
      }
          
      return Value;
    }
      public ArrayList<AbstractCountry> Apogee(ArrayList<AbstractCountry>Name,ArrayList<AbstractCountry>C,int minApogee, int maxApogee,String Country)
      {
       ArrayList<AbstractCountry> Value = new ArrayList<>();
       if(Name != null){
    //   println("mara" + Name );
     for(AbstractCountry i : Name){
        if(minApogee != 0){
        
          if(maxApogee != 0){
           
           if(maxApogee >= i.apogee &&  minApogee <= i.apogee){
                   //println(i);
                 //  println("YEHWAAA");
                   Value.add(i);
   
           }
          }
          else{
            if(minApogee != 0){
               if(minApogee <= i.apogee){
                 //println("Y");
                 // println(i);
                Value.add(i);
             }
            }
          }
        }
        else{
           if(maxApogee != 0){
             if(maxApogee >= i.apogee){
             //  println("HWAAA");
               // println(i);
                Value.add(i);
             }
           }
           else{
             //println("YEHWAAA");
              Value.add(i);
           }
        }
     }
    }
    else{
      for(AbstractCountry i : C){
        if(minApogee != 0){
        
          if(maxApogee != 0){
           
           if(maxApogee >= i.apogee &&  minApogee <= i.apogee){
                 // println(i);
                   Value.add(i);
   
           }
          }
          else{
            if(minApogee != 0){
               if(minApogee <= i.apogee){
                 // println(i);
                Value.add(i);
             }
            }
          }
        }
        else{
           if(maxApogee != 0){
             if(maxApogee >= i.apogee){
                //println(i);
                Value.add(i);
             }
           }
           else{
              Value.add(i);
           }
        }
     }
      
    }
      
          
        return Value;
    }
     public ArrayList<AbstractCountry> Perigee(ArrayList<AbstractCountry>A,int minPerigee, int maxPerigee)
      {
        ArrayList<AbstractCountry> Value = new ArrayList<>();
        
          
     for(AbstractCountry i : A){
        if(minPerigee!= 0){
        
          if(maxPerigee != 0){
           
           if(maxPerigee >= i.perigee &&  minPerigee <= i.perigee){
                 // println(i);
                   Value.add(i);
   
           }
          }
          else{
            if(minPerigee!= 0){
               if(minPerigee <= i.perigee){
                 //println(i);
                Value.add(i);
             }
            }
          }
        }
        else{
           if(maxPerigee != 0){
             if(maxPerigee >= i.perigee){
               //println(i);
                Value.add(i);
             }
           }
           else{
             //println(i);
             Value.add(i);
           }
        }
     }
     return Value;
    }
     public ArrayList<AbstractCountry> Mass(ArrayList<AbstractCountry>M,int minMass, int maxMass)
      {
        ArrayList<AbstractCountry> Value = new ArrayList<>();
      
          
     for(AbstractCountry i : M){
        if(minMass!= 0){
        
          if(maxMass != 0){
           
           if(maxMass >= i.mass &&  minMass <= i.mass){
                 println(i);
                   Value.add(i);
           }
          }
          else{
            if(minMass!= 0){
               if(minMass <= i.mass){
                 println(i);
                Value.add(i);
             }
            }
          }
        }
        else{
           if(maxMass != 0){
             if(maxMass >= i.mass){
               println(i);
                Value.add(i);
             }
           }
           else{
             println(i);
             Value.add(i);
           }
        }
     }
     return Value;
    }
  }
    
  class TextBox {
    boolean thisEvent;
    String label = "";
    String title; 
    int counter=1;
    
    boolean isSelected = true;
  
    TextBox( String tit, int h, int i, int j, int k,  int l, color m, color n, color o, color p) {
      title=tit;
      c =  j;
      a =  h;
      b =  i;
      d =  k;
      limit =  l;
      e = (h + j);
      f =  (i + k);
      select = p;
      bottom = n;
      back = o;
      text = m;
    }
    
    boolean checkSelected(ArrayList<Screen> screenList){
      if (screenList.get(0).isActive()){
        if ((mouseX >= a && mouseX <= a+width) && (mouseY >= b && mouseY <= b+height)){
          isSelected = true;
        } else {
          isSelected = false;
        }
      } else {
        isSelected = false;
      }
      
      return isSelected;
    }
  
    void display() {
      fill(bottom);
      //rect(a-10, b-90, c+90, d+100);
      rect(a-30, b - 110, c + 120, d + 130);
  
      fill(0); 
      text(title, a, b-90+20);
    
      fill(bottom);
      rect(a, b, c, d);
      rect(a - 30, b-110, c+120, d+130);
      
      fill(text);
      text(label , a, b, c, d);
    }
    
   void SearchBarChar(char s) {
     if (isSelected){
     
       String [] size = label.split(", ") ;
       int option = 0;
       String name ;
       String country ;
       if (s == CODED)  return;
       int len = label.length();
       if(s == BACKSPACE) {
         if(!label.equals(""))
           label=label.substring(0,label.length()-1);
       } else if (len >= limit) {
         return;
       } else if(s == ENTER || s == RETURN){
         if(counter <= 20){
           if(label.equals("")){
             name = null;
           } else {
             name = label;
           }   
           counter+=1;
           if(counter==2){
             title = "Enter Country code : China, EU, USA, Russia/SU, Other. \n If user does not know the name, press enter and leave space blank. "; 
             label = label + ", ";
             
           }
           if (counter==3) {
             title = "Does the user know the apogee of a specific satellite? Enter yes or no:"; 
             label = label + ", ";     
           }
           if (counter==4) {
             title = "If yes, enter the apogee but if not enter the min, max, or both of apogee and \n the details of those satellites that are in range will be shown. \n If you are not interested in apogee enter 0.";
             label = label + ", ";
           }
           if(counter==5){
             title = "Enter min of apogee you want to details on or enter 0 if you are not interested.";
             label = label + ", ";
               
           }
           if(counter==6){
             title = "Enter max of apogee you want to details on or enter 0 if you are not interested.";
             label = label + ", ";
                
           }
           if (counter==7) {
             title = "Does the user know the perigee of a specific satellite? Enter yes or no."; 
             label = label + ", ";
              
           }
           if (counter==8) {
             title = "If yes, enter to perigee but if no enter the min, max or both of perigee and \n the details of those satellites that are in range will be shown \n if you are not interested in perigee enter 0."; 
             label = label + ", ";
           }
           if(counter==9){
             title = "Enter min of perigee you want to details on or enter 0 if you are not interested.";
             label = label + ", ";
           }
           if(counter==10){
             title = "Enter max of periee you want to details on or enter 0 if you are not interested.";
             label = label + ", ";
           }
           if (counter==11) {
             title = "Does the user know the mass of a specific satellite? Enter yes or no."; 
             label = label + ", "; 
           }
           if (counter==12) {
             title = "If yes, enter to mass but if no enter the min, max or both of mass and \n the details of those satellites that are in range will be shown \n If you are not interested in \n enter 0."; 
             label = label + ", ";
           }
           if(counter==13){
             title = "Enter min of mass you want to details on or enter 0 if you are not interested.";
             label = label + ", ";
               
           }
           if(counter==14){
             title = "Enter max of mass you want to details on or enter 0 if you are not interested.";
             label = label + ", ";
               
           }
         }
       } else { 
         label += str(s) ; 
              
       }
       if(counter==15){
         size = label.split(", ");
         println(label);
         search se = new search();
         se.Name(size[0]);
         se.Country(size[1]);
         se.Apogee(se.Name(size[0]),se.Country(size[1]),Integer.parseInt(size[4]), Integer.parseInt(size[5]),size[1]);
         se.Perigee(se.Apogee(se.Name(size[0]),se.Country(size[1]),Integer.parseInt(size[4]), Integer.parseInt(size[5]),size[1]),Integer.parseInt(size[8]),Integer.parseInt(size[9]));
         informat = se.Mass( se.Perigee(se.Apogee(se.Name(size[0]),se.Country(size[1]),Integer.parseInt(size[4]), Integer.parseInt(size[5]),size[1]),Integer.parseInt(size[8]),Integer.parseInt(size[9])),Integer.parseInt(size[12]),Integer.parseInt(size[13]));
         
         for(AbstractCountry i : informat){
           n = " " + i + " \n " + n;
         }
         //information = "   " +  se.Mass( se.Perigee(se.Apogee(se.Name(size[0]),se.Country(size[1]),Integer.parseInt(size[4]), Integer.parseInt(size[5]),size[1]),Integer.parseInt(size[8]),Integer.parseInt(size[9]))
         //,Integer.parseInt(size[12]),Integer.parseInt(size[13]))+ "\n";
         addScreen(new Screen(color(0), false, "Incomplete Code"));
         
           
         
        // information = Arrays.toString(informat.toArray());
        }
      }
    }
     
    void draw(){
   
      text(n, 100, 100);
    }
   
  
    boolean event() {
      return thisEvent = mouseX>a && mouseX < a+width && mouseY >b && mouseY <b+height;
    }
    
   
  }
  
  
  
}
